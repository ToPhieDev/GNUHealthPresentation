---
title: "GNU Health"
subtitle: "Medizinische Informatik"
date: now
date-format: "D. MMMM YYYY"
format:
  revealjs:
    multiplex: true
    header: Gnu Health
    slide-number: true
    chalkboard:
      buttons: false
    preview-links: auto
    logo: images/gnu-health-logo.svg
    css: styles.css
    footer: Sophie Fürhoff und Tobias Wylega
    theme: serif
    template-partials:
        - title-slide.html
    include-in-header:
      - text: |
          <script src = "https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js""></script>
          <script type="text/javascript">
            $(document).ready(function() {
              $('body').prepend('<div class=\"zoomDiv\"><img src=\"\" class=\"zoomImg\"></div>');
              // onClick function for all plots (img's)
              $('img:not(.zoomImg)').click(function() {
                $('.zoomImg').attr('src', $(this).attr('src')).css({width: '100%'});
                $('.zoomDiv').css({opacity: '1', width: 'auto', border: '1px solid white', borderRadius: '5px', position: 'fixed', top: '50%', left: '50%', marginRight: '-50%', transform: 'translate(-50%, -50%)', boxShadow: '0px 0px 50px #888888', zIndex: '50', overflow: 'auto', maxHeight: '100%'});
              });
              // onClick function for zoomImg
              $('img.zoomImg').click(function() {
                $('.zoomDiv').css({opacity: '0', width: '0%'});
              });
            });
          </script>
revealjs-plugins:
  - attribution
resources:
  - demo.pdf
filters:
  - reveal-header

---

# Virtual Box mit Debian
## Installation 
- Anhand der offiziellen Anleitung

::: {.incremental}
- Probleme mit Root-Rechten 
  - Statt unbeaufsichtigter Installation: Manuelle Installation
  - Kein Passwort für Root vergeben
  - Der nächste angelegte Benutzer erhält automatisch sudo-Rechte
:::

## Zwischenablage {auto-animate="true"}
- In VirtualBox "Gasterweiterungen iso" als CD einlegen
- In Debian:

```bash {code-line-numbers="3"}
cd /media
mkdir vbox
sudo mount /dev/sr0 vbox/
```


## Zwischenablage {auto-animate="true" visibility="uncounted"}
- In VirtualBox "Gasterweiterungen iso" als CD einlegen
- In Debian:

```bash {code-line-numbers="4-5"}
cd /media
mkdir vbox
sudo mount /dev/sr0 vbox/
cd vbox/
./VBoxLinuxAdditions.run
```

## Installation auf Mac mit m1
1. [Server-Image](https://ubuntu.com/download/server/arm) für arm herunterladen
2. Tastatur einrichten: `sudo dpkg-reconfigure keyboard-configuration`
3. [GUI](https://thelinuxforum.com/articles/919-how-to-install-gui-on-ubuntu-24-04-server) nachinstallieren
    - `sudo apt update`
    - `sudo apt install lightdm`
    - `sudo apt install ubuntu-desktop`
4. Zwischenablage benutzen `Control + Shift + C/V`

## Installierung von GNU Health
- Anhand der offiziellen Anleitung
- Ansible Playbook


# GNU Health
## Customizing
- Verschiedene User angelegt
- Verschiedene Patienten angelegt
- Für die Patienten:
  - Termine angelegt
  - Untersuchungen mit Diagnosen angelegt

## Christine Heppenheimer
⇒ Ärztin
Benutzername: `heppenheimer`

Passwort: `christine!`

Zugriffsberechtigungen: Gesundheitsarzt, Health Administration

## Anna Müller
- **Untersuchungsergebnisse**:
    - Gewicht: 68 kg
    - Größe: 1,65 m
    - Blutdruck: 125/80 mmHg
    - Blutzucker: 95 mg/dl
    - Cholesterin: 190 mg/dl
- **Diagnostizierte Krankheit(en)**:
    - Leichte Hypertonie

## Anna Müller
- **Bisherige Termine**:
    - 29.11.2024: Allgemeine Vorsorgeuntersuchung
- **Zukünftige Termine**:
    - 03.12.2024: Nachuntersuchung Blutdruck

## Customizing Teil 2
- Klinik angelegt, mit Abteilungen und Betten
- Mitarbeiter den Abteilungen zugeordnet
- Zugriffsrechte für die Mitarbeiter gesetzt

## Das System ausprobieren
- Patient aufgenommen und zu Bett zugewiesen
- Visite durchgeführt
- Bett gewechselt
![](images/change_bed.png)


## Das System ausprobieren Teil 2
- Patient entlassen
  - Entlassungsgrund und Diagnose angegeben
  - Bett gesäubert
  
![](images/bett_discharge.png)

# LIMS aka Occhiolino

## Setup

1. Verwaltung → Module → Module
2. Öffne das Modul `health_lab`
3. Für Aktivierung vormerken
4. Verwaltung → Module → Vorgemerkte Aktivierungen
5. Aktualisierung starten

## Labor Tests angefragt
Für alle 6 Patienten:

**Patient:** Anna Müller  
**Datum:** 03.12.2024  
**Dringend:** Ja  
**Arzt:** Christine Heppenheimer  
**Kontext:** Kontrolle Blutdruck (I10 - Hypertension)  
**Tests:** Renal Function Test, Urine Analysis  

## Benötigte fehlende Testarten
Nicht alle Testarten sind vorhanden.

Diese können manuell angelegt werden.

Beispiel:

- Testart: Knochendichtemessung
- Testeinheit: SD (Standardabweichung)

## Test erstellen
![](images/lab/create_test.png)

## Testergebnisse eintragen
![](images/lab/fill_test.png)

## Testergebnisse anzeigen
![](images/lab/test_report.png)

## Übersicht aller Tests
![](images/lab/view_tests.png)


## Testergebnisse importieren
Die Testergebnisse können auch mithilfe einer CSV-Datei eingespielt werden.

Setup:

1. `python3 -m venv ~/myenv`
2. `source ~/myenv/bin/activate` 
3. `pip install "proteus>=6.0,<6.1"` 
4. `pip install pandas`  <- kein Teil der Anleitung :-(

## Testergebnisse importieren

- python Skript aus Repo laden
- Skript ausführen  

```python
python3 gnuhealth-data-import.py 
    -f 4-labtests.csv 
    -H localhost -p 80 
    -u admin -P gnusolidario -d health
```

![](images/lab/import.png)


# Mirth Connect

## Installations-Skript
![](images/mirth/error_red.png)

## Installations-Skript
OK - Probieren wir es nochmal

![image.png](images/mirth/error_white.png)

## Installations-Skript
Jedes Mal sieht es anders aus

Nach dem 5. Mal:
![img.png](images/mirth/error.png)


## RPM Package
::: {.incremental}
Wie wird das eigentlich benutzt?
Dokumentation von Debian: One should avoid using .rpm package on a Debian system
:::

## TAR Package
::: {.incremental}
- Runterladen
- Entpacken
- Starten
:::
